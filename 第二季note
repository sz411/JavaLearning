类是模子，确定对象将会拥有的特征（属性）和行为（方法）

类的特点：
	类是对象的类型
	具有相同属性和方法的一组对象的组合

对象的属性：对象具有的各种特征。
对象的方法：对象执行的操作。

所有的Java程序都以类class为组织单元。

一、定义类名
二、编写类的属性
三、编写类的方法
public class 类名{
//定义属性部分（成员变量）
属性1的类型 属性1；
属性2的类型 属性2；
...
属性n的类型 属性n；
//定义方法部分
方法1；
方法2；
...
方法m;
}

java中的对象：
创建对象：	类名 对象名=new 类名（）；
使用对象： 引用对象的属性：对象名.属性
			phone.screen = 5;//给screen属性赋值5
			引用对象的方法：对象名.方法名（）
			phone.sendMessage();//调用sendMessages()方法

成员变量：	在类中定义，用来描述对象将要有什么。
局部变量： 	在类的方法中定义，在方法中临时保存数据。

new+构造方法	创建一个新的对象	构造方法也是一种方法
构造方法是定义再java类中的一个初始化对象的方法
构造方法与类同名且没有返回值
public 构造方法名（）{			public：没有返回值类型
	//初始化代码					构造方法名：与类名相同
}									（）可以指定参数

在静态方法中可以直接调用同类中的静态成员，但不能直接调用非静态成员。
如果希望在静态方法中调用非静态变量，可以通过创建类的对象，然后通过对象来访问非静态变量。
在普通成员方法中，则可以直接访问同类的非静态变量和静态变量。
静态方法中不能直接调用非静态方法，需要通过对象来访问非静态方法。
静的就是动的，动的还是动的，静用动要申请。

静态初始化块只会在类加载时执行，且只会执行一次，同时静态初始化块只能给静态变量赋值，不能初始化
普通的成员变量。

封装概念：将类的某些信息隐藏在类内部，不允许外部程序直接访问，而是通过该类提供的方法来实现对
隐藏信息的操作和访问。
封装的实现步骤：	一、修改属性的可见性:设为private
					二、创建getter/setter方法，用于属性的读写
					三、在getter/setter方法中加入属性控制语句，对属性值的合法性进行判断

包的使用：1、可以通过import关键字，在某个文件使用其它文件中的类；
		      2、Java中，包的命名规范是全小写字母拼写；
			3、使用的时候不但可以加载某个包下的所有文件	eg:com.imooc.*
				也可以加载某个具体子包下的所有文件	eg:com.imooc.music.*

访问修饰符：
private:		本类		
默认：			本类	同包
protected:	本类	同包	子类
public:		本类	同包	子类	其他

this关键字：
soure-getters and setters

内部类：成员内部类
		 静态内部类
		方法内部类
		匿名内部类
成员内部类：	定义了成员内部类后，必须使用外部类对象来创建内部类对象，而不能直接去new一个内部
				对象，即:	内部类 对象名=外部类对象.new 内部类（）；
				外部类是不能直接使用内部类的成员和方法的，可先创建内部类的对象，然后通过内部类的
				对象来访问其成员变量和方法
				如果外部类和内部类具有相同的成员变量或方法，内部类默认访问自己的内部变量和方法，
				如果要访问外部类的成员变量，可以使用this关键字
静态内部类：	静态内部类是static修饰的内部类，特点：
				1、静态内部类不能直接访问外部类的非静态成员，但可以通过new 外部类().成员
				的方式访问
				2、创建静态内部类的对象时，不需要外部类的对象，可以直接创建内部类 对象名=new
				内部类（）;
				3、若内外相同，则类名.静态成员，不同，则可以通过成员名
方法内部类：	方法内部类就是内部类定义在外部类的方法中，方法内部只在该方法的内部可见，即只
				在该方法内可以使用。
				所以，方法内部类不能使用访问控制符和static修饰符。

继承：	class Dog extends Animal{}
方法的重写
继承初始化
final关键字	限定不能继承的东西，最终的东西
super关键字：在对象的内部使用，可以代表父类对象。
				子类的构造的过程当中必须调用其父类的构造方法
				如果子类的构造方法中没有显示调用父类的构造方法，则系统默认调用父类的无参的构造方法				
				如果显示的调用构造方法，必须在子类的构造方法的第一行
				如果子类构造方法中既没有显示父类的构造方法，而父类又没有无参的构造方法，则编译出错

Object类是所有类的父类，除非一个类使用extends关键字明确标示继续另外一个类
	toString()方法
	在Object类里面定义toString()方法的时候返回的对象的哈希code码（对象地址字符串）
	可以通过重写toString（）方法表示出对象的属性
equals()方法	比较的是对象的引用是否指向同一块内存地址。
				一般情况下比较两个对象时比较他的值是否一致，所以要进行重写。

多态：
对象的多种形态
１、引用多态
	父类的引用可以指向本类的对象
	父类的引用可以指向子类的对象
２、方法多态
	创建本类对象时，调用的方法为本类方法

引用类型转换：	instanceof运算符


	／／创建子类对象时，调用的方法为子类重写的方法或者继承的方法

抽象类：	抽象类前使用abstract关键字修饰
使用规则：	１、abstract定义抽象类
			２、abstract定义抽象方法，只有声明，不需要实现
			３、包含抽象方法的类是抽象类
			４、抽象类中可以包含普通的方法，也可以没有抽象方法
			５、抽象类不能直接创建，可以定义引用变量

接口：		概念：接口可以理解为一种特殊的类，由全局变量和公共的抽象方法所组成的
			类是一种具体实现体，而接口定义了某一批类所需要遵守的规范，接口不关心这些类的内部数据，
			也不关心这里类里方法的实现细节，它只规定这些类里必须提供某些方法。
interface关键字

